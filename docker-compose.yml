version: '3.8'

services:
  # Redis for caching and message queuing
  redis:
    image: redis:7.2-alpine
    container_name: email-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - email-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB for email data storage
  mongodb:
    image: mongo:7.0
    container_name: email-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: emailpass123
      MONGO_INITDB_DATABASE: emaildb
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - email-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Web Interface
  mongo-express:
    image: mongo-express:latest
    container_name: email-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: emailpass123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://admin:emailpass123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - email-network

  # Email Intelligence Backend (Optional - for containerized deployment)
  email-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: email-backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:emailpass123@mongodb:27017/emaildb
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
      - mongodb
    networks:
      - email-network
    volumes:
      - ./:/app
      - /Users/${USER}/Library/Mail:/mail_data:ro
    profiles:
      - full-stack

  # Analytics Service (Optional - for containerized deployment)
  email-analytics:
    build:
      context: .
      dockerfile: Dockerfile.analytics
    container_name: email-analytics
    restart: always
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - email-network
    volumes:
      - ./:/app
    profiles:
      - full-stack

volumes:
  redis-data:
    driver: local
  mongo-data:
    driver: local

networks:
  email-network:
    driver: bridge